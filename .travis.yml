# ITKR Build
language: r
sudo: false
cache: packages
warnings_are_errors: true
use_bioc: true
bioc_required: true
cran: http://cran.rstudio.com

os:
  - linux
  - osx

r:
  - oldrel  
  - release
  - devel

matrix: 
  allow_failures:
    - r: devel

latex: false
compiler: clang
osx_image: xcode9

env:
  global:
  - R_BUILD_ARGS=" --no-build-vignettes --no-manual"
  - R_CHECK_ARGS=" --timings --as-cran --no-manual --install-args=--build"
  - RGL_USE_NULL=TRUE
  - WARNINGS_ARE_ERRORS=1 
  - DISPLAY=:99.0

before_install:
  - ulimit -n 2048  
  - export LD_LIBRARY_PATH=/usr/local/clang/lib:${LD_LIBRARY_PATH}
  - export PROJ_DIR=`basename $PWD`
  - export ITK_GLOBAL_DEFAULT_NUMBER_OF_THREADS=1
  - fname=travis_helpers.sh
  - wget -O ${fname} http://bit.ly/travis_helpers
  - cat ${fname}; source ${fname}; rm ${fname}  
  - export rver=`r_version`;
  - export gh_user=`get_gh_user` ; echo $gh_user ;
  - cat DESCRIPTION  
  - export PACKAGE_NAME=`package_name`
  - export RCHECK_DIR=${PACKAGE_NAME}.Rcheck  
  # does all the clang exports  
  - x=`export_clang_cxx`; eval ${x}
  - if [ "$TRAVIS_OS_NAME" = "osx" ];
    then
      no_open_mp ; 
    fi  
  - echo "CC=${CC}, CXX=${CXX}, CXX1X=${CXX1X}"
  - echo "CXX1XSTD=${CXX1XSTD}, CXX11=${CXX11}"  
  - clang_cxx  
  - export cmake_version="3.11"
  - cmake --version
  - x=`cmake_setup`; echo "${x}"; eval ${x};
  - cmake --version
  - ./cleanup      
  # - export PATH=$HOME/bin/:$PATH;
  - echo $PATH ;
  - Rscript -e "install.packages('Rcpp', type = 'source', repos=c(CRAN='https://cran.rstudio.com'))"    
  - install_deps_no_suggests

script:
  - x=`export_clang_cxx`; eval ${x}
  - travis_wait 100 R CMD build ${R_BUILD_ARGS} .
  - rm -f travis_wait*.log
  - PKG_TARBALL=$(ls -1t *.tar.gz | head -n 1)  
  - ls
  - travis_wait 100 R CMD check ${R_CHECK_ARGS} "${PKG_TARBALL}"; CHECK_RET=$? ;
  - rm -f travis_wait*.log
  - if [[ $CHECK_RET -ne 0 ]];
    then
      echo "R CMD check failed"; 
      check_fail; 
      dump_logs; 
      check_warnings ;      
      travis_terminate 1;
    fi
  - ls
  - PKG_FILE_NAME=$(ls -1t *.tar.gz | head -n 1);
  - PKG_TARBALL_WITH_R=`echo $PKG_FILE_NAME | sed 's/.tar.gz/_'"R${rver}"'.tar.gz/'` ;
  - if [ "$TRAVIS_OS_NAME" == "osx" ]; then
      PKG_FILE_NAME=$(ls -1t *.tgz | head -n  1);
      PKG_TARBALL_WITH_R=`echo $PKG_FILE_NAME | sed 's/.tgz/_'"R${rver}"'.tgz/'` ;
    fi
  - mv ${PKG_FILE_NAME} ${PKG_TARBALL_WITH_R} ;      
  - PKG_FILE_NAME=${PKG_TARBALL_WITH_R}


after_failure:
  - dump_logs

after_success:
  - dump_logs

notifications:
  email:
    recipients:
    - muschellij2@gmail.com
    - stnava@gmail.com
    on_success: change
    on_failure: always

# so no overwrite of linux build
before_deploy:
  - if [ "$TRAVIS_OS_NAME" = "osx" ];
    then
      rm -f *.tar.gz;
    fi

deploy:
  provider: releases
  api_key:
    secure: Y+JfKm3oXRUxpxyWjBtXimuBcuv3+D5iakzCwMJLqEDPjd+w9ow1x5a4GN/LfFg8Lbhflc8Uaz2bpxRuD5enk+RRmFtcXBB/IsnxkXBEM3fA2eT4ZIxq/aTt4HisOdXclyZc5PxAXFOVO8/QWcjh3boqSpOjscS0kYCWkm4KT9M=
  file: ${PKG_FILE_NAME}
  skip_cleanup: true
  on:
    tags: true
    repo: ${gh_user}/${PROJ_DIR}
    all_branches: true


